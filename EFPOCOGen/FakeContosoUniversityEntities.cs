// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.51
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

namespace EFPOCOGen
{

    [System.CodeDom.Compiler.GeneratedCodeAttribute("EF.Reverse.POCO.Generator", "2.19.2.0")]
    public partial class FakeContosoUniversityEntities : IContosoUniversityEntities
    {
        public System.Data.Entity.DbSet<Course> Courses { get; set; }
        public System.Data.Entity.DbSet<Department> Departments { get; set; }
        public System.Data.Entity.DbSet<Enrollment> Enrollments { get; set; }
        public System.Data.Entity.DbSet<OfficeAssignment> OfficeAssignments { get; set; }
        public System.Data.Entity.DbSet<Person> People { get; set; }
        public System.Data.Entity.DbSet<Sysdiagram> Sysdiagrams { get; set; }
        public System.Data.Entity.DbSet<VwDept> VwDepts { get; set; }
        public System.Data.Entity.DbSet<VwDeptCourseCount> VwDeptCourseCounts { get; set; }

        public FakeContosoUniversityEntities()
        {
            Courses = new FakeDbSet<Course>("CourseId");
            Departments = new FakeDbSet<Department>("DepartmentId");
            Enrollments = new FakeDbSet<Enrollment>("EnrollmentId");
            OfficeAssignments = new FakeDbSet<OfficeAssignment>("InstructorId");
            People = new FakeDbSet<Person>("Id");
            Sysdiagrams = new FakeDbSet<Sysdiagram>("DiagramId");
            VwDepts = new FakeDbSet<VwDept>("DeptName");
            VwDeptCourseCounts = new FakeDbSet<VwDeptCourseCount>("DepartmentId");

            InitializePartial();
        }
        
        public int SaveChangesCount { get; private set; } 
        public int SaveChanges()
        {
            ++SaveChangesCount;
            return 1;
        }

        public System.Threading.Tasks.Task<int> SaveChangesAsync()
        {
            ++SaveChangesCount;
            return System.Threading.Tasks.Task<int>.Factory.StartNew(() => 1);
        }

        public System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken)
        {
            ++SaveChangesCount;
            return System.Threading.Tasks.Task<int>.Factory.StartNew(() => 1, cancellationToken);
        }

        partial void InitializePartial();

        protected virtual void Dispose(bool disposing)
        {
        }
        
        public void Dispose()
        {
            Dispose(true);
        }
        
        // Stored Procedures
        public int DepartmentDelete(int? departmentId, byte[] rowVersionOriginal)
        {
 
            return 0;
        }

        public System.Collections.Generic.List<DepartmentInsertReturnModel> DepartmentInsert(string name, decimal? budget, System.DateTime? startDate, int? instructorId)
        {
            int procResult;
            return DepartmentInsert(name, budget, startDate, instructorId, out procResult);
        }

        public System.Collections.Generic.List<DepartmentInsertReturnModel> DepartmentInsert(string name, decimal? budget, System.DateTime? startDate, int? instructorId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<DepartmentInsertReturnModel>();
        }

        public System.Collections.Generic.List<DepartmentUpdateReturnModel> DepartmentUpdate(int? departmentId, string name, decimal? budget, System.DateTime? startDate, int? instructorId, byte[] rowVersionOriginal)
        {
            int procResult;
            return DepartmentUpdate(departmentId, name, budget, startDate, instructorId, rowVersionOriginal, out procResult);
        }

        public System.Collections.Generic.List<DepartmentUpdateReturnModel> DepartmentUpdate(int? departmentId, string name, decimal? budget, System.DateTime? startDate, int? instructorId, byte[] rowVersionOriginal, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<DepartmentUpdateReturnModel>();
        }

        public System.Collections.Generic.List<GetDeptReturnModel> GetDept(int? id)
        {
            int procResult;
            return GetDept(id, out procResult);
        }

        public System.Collections.Generic.List<GetDeptReturnModel> GetDept(int? id, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<GetDeptReturnModel>();
        }

        public int InsertDept(string name, decimal? budget)
        {
 
            return 0;
        }

    }
}
// </auto-generated>
